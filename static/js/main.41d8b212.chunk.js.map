{"version":3,"sources":["GameSquare.jsx","GameRow.jsx","GameBoard.js","index.js"],"names":["GameSquare","square","handleClick","rowIndex","columnIndex","onClick","GameRow","row","props","map","index","App","useState","gameBoard","updateGameBoard","winner","updateWinner","turnCounter","updateTurnCounter","currentPlayer","updateCurrentPlayer","useEffect","alert","handleGameSquareClick","location","weHaveAWinner","forEach","winLocation","every","item","isWinner","console","log","className","ReactDOM","render","StrictMode","GameBoard","document","getElementById"],"mappings":"4NAYeA,MAVf,YAAqE,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YACnD,OACE,wBAAQC,QAAS,kBAAMH,EAAY,CAACC,EAAUC,KAA9C,SAEKH,EAA0B,IAAXA,EAAe,IAAM,IAA3B,M,UCQHK,MAZf,YAAqC,IAAlBC,EAAiB,EAAjBA,IAAQC,EAAS,iBAClC,OACE,8BAEID,EAAIE,KAAI,SAACR,EAAQS,GAAT,OACN,cAAC,EAAD,aAAYT,OAAQA,EAAQG,YAAaM,GAAuBF,GAAXE,SCwEhDC,MA5Ef,WACE,MAAqCC,mBAAS,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,KAA5E,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA+BF,qBAA/B,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAyCJ,mBAAS,GAAlD,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA6CN,mBAAS,GAAtD,mBAAOO,EAAP,KAAsBC,EAAtB,KAEAC,qBAAU,WACJN,IACFO,MAAM,mBAAD,OAAoBP,EAApB,yBACLD,EAAgB,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,KAC9CE,EAAa,MACbE,EAAkB,GAClBE,EAAoB,MAErB,CAACL,IAEJ,IA6BMQ,EAAwB,SAACC,GAI7B,GAHAX,EAAUW,EAAS,IAAIA,EAAS,IAAML,EACtCL,EAAgB,YAAID,IAEhBI,EAAc,EAAG,CACnB,IAAMQ,EAlCO,SAACD,GAChB,IAYIT,GAAS,EAab,MAzBsB,CACpB,MAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,KAChD,MAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,KACjC,MAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,KAChD,MAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,KACjC,MAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,KAC/D,MAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,KACjC,MAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,KAChD,MAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,KACjC,MAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,MAKpCS,GAAUE,SAAQ,SAAAC,GACbA,EAAYC,OAAM,SAAAC,GACjC,OAAOhB,EAAUgB,EAAK,IAAIA,EAAK,MAAQV,OAIvCJ,GAAS,MAKNA,EAQiBe,CAASN,GAE/BO,QAAQC,IAAI,uBAAwBP,GAChCA,IACFM,QAAQC,IAAI,mBACZhB,EAAaG,IAIjBC,EAAsC,IAAlBD,EAAsB,EAAI,GAC9CD,EAAkBD,EAAc,IAGlC,OACE,sBAAKgB,UAAU,MAAf,UACE,6CACA,yCAAYd,EAAZ,aAEEN,EAAUJ,KAAI,SAACF,EAAKG,GAAN,OACZ,cAAC,EAAD,CAASH,IAAKA,EAAKJ,SAAUO,EAAmBR,YAAaqB,GAApBb,UCpEnDwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.41d8b212.chunk.js","sourcesContent":["import './GameSquare.scss';\n\nfunction GameSquare({ square, handleClick, rowIndex, columnIndex }) {\n  return (\n    <button onClick={() => handleClick([rowIndex, columnIndex])}>\n      {\n        !square ? '' : (square === 1 ? 'X' : 'O')\n      }\n    </button>\n  )\n}\n\nexport default GameSquare;","import GameSquare from './GameSquare';\n\nfunction GameRow({ row, ...props }) {\n  return (\n    <div>\n      {\n        row.map((square, index) => (\n          <GameSquare square={square} columnIndex={index} key={index} {...props} />\n        ))\n      }\n    </div>\n  )\n}\n\nexport default GameRow;","import { useState, useEffect } from 'react';\nimport GameRow from './GameRow';\n\nfunction App() {\n  const [gameBoard, updateGameBoard] = useState([[0, 0, 0], [0, 0, 0], [0, 0, 0]]);\n  const [winner, updateWinner] = useState();\n  const [turnCounter, updateTurnCounter] = useState(1);\n  const [currentPlayer, updateCurrentPlayer] = useState(1);\n\n  useEffect(() => {\n    if (winner) {\n      alert(`Congrats player ${winner}, you're the winner!`);\n      updateGameBoard([[0, 0, 0], [0, 0, 0], [0, 0, 0]]);\n      updateWinner(null);\n      updateTurnCounter(1);\n      updateCurrentPlayer(1);\n    }\n  }, [winner]);\n\n  const isWinner = (location) => {\n    const winConditions = {\n      '0,0': [[[0,1],[0,2]], [[1,0],[2,0]], [[1,1],[2,2]]],\n      '0,1': [[[0,0],[0,2]], [[1,1],[2,1]]],\n      '0,2': [[[0,0],[0,1]], [[1,2],[2,2]], [[1,1],[2,0]]],\n      '1,0': [[[1,1],[1,2]], [[0,0],[2,0]]],\n      '1,1': [[[0,1],[2,1]], [[1,0],[1,2]], [[0,0],[2,2]], [[0,2],[2,0]]],\n      '1,2': [[[1,0],[1,1]], [[0,2],[2,2]]],\n      '2,0': [[[0,0],[1,0]], [[2,1],[2,2]], [[1,1],[0,2]]],\n      '2,1': [[[0,1],[1,1]], [[2,0],[2,2]]],\n      '2,2': [[[0,2],[1,2]], [[2,0],[2,1]], [[0,0],[1,1]]]\n    };\n\n    let winner = false;\n    \n    winConditions[location].forEach(winLocation => {\n      const isWinner = winLocation.every(item => {\n        return gameBoard[item[0]][item[1]] === currentPlayer;\n      });\n\n      if (isWinner) {\n        winner = true;\n        return;\n      }\n    });\n\n    return winner;\n  }\n\n  const handleGameSquareClick = (location) => {\n    gameBoard[location[0]][location[1]] = currentPlayer;\n    updateGameBoard([...gameBoard]);\n\n    if (turnCounter > 4) {\n      const weHaveAWinner = isWinner(location);\n\n      console.log('do we have a winner?', weHaveAWinner);\n      if (weHaveAWinner) {\n        console.log('updating winner')\n        updateWinner(currentPlayer);\n      }\n    }\n\n    updateCurrentPlayer(currentPlayer === 1 ? 2 : 1);\n    updateTurnCounter(turnCounter + 1);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>TIM Tac Toe</h1>\n      <h2>Player {currentPlayer}'s turn</h2>\n      {\n        gameBoard.map((row, index) => (\n          <GameRow row={row} rowIndex={index} key={index} handleClick={handleGameSquareClick}/>\n        ))\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GameBoard from './GameBoard';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GameBoard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}